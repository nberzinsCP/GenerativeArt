---
title: "Generative Art"
format: html
editor: visual
self-contained: true
---

```{r}
library(Rcpp)
library(ggplot2)
library(dplyr)
```

### My Most Recent Order from SloDoCo

```{r, cache = TRUE}
cppFunction('DataFrame createTrajectory(int n, double x0, double y0, 
            double a, double b, double c, double d) {
            // create the columns
            NumericVector x(n);
            NumericVector y(n);
            x[0]=x0;
            y[0]=y0;
            for(int i = 1; i < n; ++i) { //0 indexed as opposed to R being 1 indexed
            x[i] = c*sin(a*y[i-1])+cos(a*x[i-1]);
            y[i] = sin(b*x[i-1])+d*cos(b*y[i-1]);
            }
            // return a new data frame
            return DataFrame::create(_["x"]= x, _["y"]= y);
            }
            ')
#https://cran.r-project.org/web/packages/Rcpp/vignettes/Rcpp-introduction.pdf

a=1.24458046630025
b=1.25191834103316 
c=1.81590817030519 
d=-1.90866735205054
 
df=createTrajectory(1000000, 0, 0, a, b, c, d)
 

ggplot(df, aes(x, y)) + 
  geom_point(color= "#e9c46a", shape = 46, alpha=.05) + 
  theme(legend.position  = "none",
            panel.background = element_rect(fill="#264653"),
            axis.ticks       = element_blank(),
            panel.grid       = element_blank(),
            axis.title       = element_blank(),
            axis.text        = element_blank())

#https://fronkonstin.com/2017/11/07/drawing-10-million-points-with-ggplot-clifford-attractors/
```

The artist, having studied at the California Polytechnic State University - San Luis Obispo, often found himself within the comforting confines of a local donut shop known as SloDoCo (San Luis Obispo Doughnut Company). **My Most Recent Order from SloDoCo** takes a beloved pastry (the doughnut) and deconstructs it. What is a doughnut when broken down into pure abstraction: radial, decadence, colorful, sweet swirls and whirlpools. When asked what inspired him to create this piece, he referred to thinking about his favorite "Benoitism" before taking a bight out of his marshmallow galaxy doughnut: "A donut hole inside a donut's hole. But we must look a little closer. And when we do, we see that the donut hole has a hole at its center. It is not a donut hole but a smaller donut with its own hole, and out donut is not whole at all!"

As commented in code, I referred to a website that was attempting to use lorenz curves with Rcpp implementation where I simply ended up finding a description of how to use trajectory curves to create interesting R art. The Rcpp package was used to process the volume of data faster than R could have due to the lack of additional under the hood processing (like automatic garbage collection). Using trigonometric functions is what created the cyclical effects seen in the art piece, and the different patterns seen were simply a manipulation of the trig function by apply translations to the trig functions. The most obvious effect of these translations can be seen in the width of the doughnut which is attributed to the large c value multiplied into the X's sin calculation. To achieve the fine granularity of the doughnut, I used many (one million) data points with very small alpha values as opposed to fewer but more defined points which wouldn't have appeared as complex.

```{r}
library(jasmines)
```

### The Last Braincell Graphing Judo Economic Barriers of Entry

```{r, cache = TRUE}
use_seed(431) %>%
  entity_circle(
    grain = 80
  ) %>%
  unfold_meander(
    iterations = 500,
    smoothing = 10
  ) %>%
  style_ribbon()

```

Struggle. Its beautiful. Struggle itself can at times produce a more spectacular result than the desired end product. And here, the artist's strokes can be seen as a struggle to both draw and conceptualize a homework assignment of his that demands he graphically produce a Judo economic condition on the barrier of entry. Per a judo conditions requirements, graphically it must appear a vertical or horizontal align. Alas, the artist must truly be suffering.

Just playing with the Jasmines package and stumbled upon the unfold_meander() function. Increased the number of iterations to 500 so that there were more closed curves which crossed among themselves in the center to show off the different colors produced by the style_ribbon() function. I also liked how increasing the grain in the entity_circle() function added additional weight and heft to the lines and imagery so I decided to arbitrarily turn that up to a satisfying point.

### Horribly Designed Tulip Field

```{r}
iris |>
  ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species, size = Sepal.Width, show.legend = FALSE)) +
  geom_point(shape = 19, show.legend = FALSE, alpha = .9) +
  geom_line(show.legend = FALSE, alpha = .3) +
  scale_color_brewer(
    type = "seq",
    palette = 11,
    direction = 1
  ) +
  theme_void() +
  theme(
    panel.backgroun = element_rect(fill = "black")
  ) +
  coord_polar()
```

A regular celebration for the coming of spring for the artist during his childhood was visiting Puyallup's (Washington state) tulip festival. He admired the symmetry and vibrancy of the fields and always loved curiously pushing his face close to the flowers to examine their every detail. But in these trying times of war, disinformation, and chaos, he felt that even something as far removed from it all as his tulip fields may become affected by society's ailments.The colors of this graph remind him of his childhood tulip fields.

I decided to take a twist on this polar coordinate scatter plot by adding the point paths and messing with the alpha levels of the lines to make it appear as the dots are darting around from side to side, leaving a wake of their groups coloring. The scale_color_brewer() allowed me to pick a color palette that I could quickly import. Changing the coordinate plane to polar obviously creates that desired radial effect on the graph.
